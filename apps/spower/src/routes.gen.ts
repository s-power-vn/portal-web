/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedHomeImport } from './routes/_authenticated/home'
import { Route as AuthenticatedDocumentWaitingImport } from './routes/_authenticated/document-waiting'
import { Route as AuthenticatedDocumentMineImport } from './routes/_authenticated/document-mine'
import { Route as AuthenticatedDocumentAllImport } from './routes/_authenticated/document-all'
import { Route as AuthenticatedGeneralIndexImport } from './routes/_authenticated/general/index'
import { Route as AuthenticatedGeneralSuppliersImport } from './routes/_authenticated/general/suppliers'
import { Route as AuthenticatedGeneralEmployeesImport } from './routes/_authenticated/general/employees'
import { Route as AuthenticatedGeneralCustomersImport } from './routes/_authenticated/general/customers'
import { Route as AuthenticatedDocumentNewImport } from './routes/_authenticated/document/new'
import { Route as AuthenticatedGeneralSuppliersNewImport } from './routes/_authenticated/general/suppliers/new'
import { Route as AuthenticatedGeneralEmployeesNewImport } from './routes/_authenticated/general/employees/new'
import { Route as AuthenticatedGeneralCustomersNewImport } from './routes/_authenticated/general/customers/new'
import { Route as AuthenticatedGeneralSuppliersSupplierIdEditImport } from './routes/_authenticated/general/suppliers/$supplierId/edit'
import { Route as AuthenticatedGeneralEmployeesEmployeeIdEditImport } from './routes/_authenticated/general/employees/$employeeId/edit'
import { Route as AuthenticatedGeneralCustomersCustomerIdEditImport } from './routes/_authenticated/general/customers/$customerId/edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedHomeRoute = AuthenticatedHomeImport.update({
  path: '/home',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDocumentWaitingRoute =
  AuthenticatedDocumentWaitingImport.update({
    path: '/document-waiting',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDocumentMineRoute = AuthenticatedDocumentMineImport.update({
  path: '/document-mine',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDocumentAllRoute = AuthenticatedDocumentAllImport.update({
  path: '/document-all',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGeneralIndexRoute = AuthenticatedGeneralIndexImport.update({
  path: '/general/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGeneralSuppliersRoute =
  AuthenticatedGeneralSuppliersImport.update({
    path: '/general/suppliers',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedGeneralEmployeesRoute =
  AuthenticatedGeneralEmployeesImport.update({
    path: '/general/employees',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedGeneralCustomersRoute =
  AuthenticatedGeneralCustomersImport.update({
    path: '/general/customers',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDocumentNewRoute = AuthenticatedDocumentNewImport.update({
  path: '/document/new',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGeneralSuppliersNewRoute =
  AuthenticatedGeneralSuppliersNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedGeneralSuppliersRoute,
  } as any)

const AuthenticatedGeneralEmployeesNewRoute =
  AuthenticatedGeneralEmployeesNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedGeneralEmployeesRoute,
  } as any)

const AuthenticatedGeneralCustomersNewRoute =
  AuthenticatedGeneralCustomersNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedGeneralCustomersRoute,
  } as any)

const AuthenticatedGeneralSuppliersSupplierIdEditRoute =
  AuthenticatedGeneralSuppliersSupplierIdEditImport.update({
    path: '/$supplierId/edit',
    getParentRoute: () => AuthenticatedGeneralSuppliersRoute,
  } as any)

const AuthenticatedGeneralEmployeesEmployeeIdEditRoute =
  AuthenticatedGeneralEmployeesEmployeeIdEditImport.update({
    path: '/$employeeId/edit',
    getParentRoute: () => AuthenticatedGeneralEmployeesRoute,
  } as any)

const AuthenticatedGeneralCustomersCustomerIdEditRoute =
  AuthenticatedGeneralCustomersCustomerIdEditImport.update({
    path: '/$customerId/edit',
    getParentRoute: () => AuthenticatedGeneralCustomersRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/document-all': {
      preLoaderRoute: typeof AuthenticatedDocumentAllImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/document-mine': {
      preLoaderRoute: typeof AuthenticatedDocumentMineImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/document-waiting': {
      preLoaderRoute: typeof AuthenticatedDocumentWaitingImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/home': {
      preLoaderRoute: typeof AuthenticatedHomeImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/document/new': {
      preLoaderRoute: typeof AuthenticatedDocumentNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/general/customers': {
      preLoaderRoute: typeof AuthenticatedGeneralCustomersImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/general/employees': {
      preLoaderRoute: typeof AuthenticatedGeneralEmployeesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/general/suppliers': {
      preLoaderRoute: typeof AuthenticatedGeneralSuppliersImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/general/': {
      preLoaderRoute: typeof AuthenticatedGeneralIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/general/customers/new': {
      preLoaderRoute: typeof AuthenticatedGeneralCustomersNewImport
      parentRoute: typeof AuthenticatedGeneralCustomersImport
    }
    '/_authenticated/general/employees/new': {
      preLoaderRoute: typeof AuthenticatedGeneralEmployeesNewImport
      parentRoute: typeof AuthenticatedGeneralEmployeesImport
    }
    '/_authenticated/general/suppliers/new': {
      preLoaderRoute: typeof AuthenticatedGeneralSuppliersNewImport
      parentRoute: typeof AuthenticatedGeneralSuppliersImport
    }
    '/_authenticated/general/customers/$customerId/edit': {
      preLoaderRoute: typeof AuthenticatedGeneralCustomersCustomerIdEditImport
      parentRoute: typeof AuthenticatedGeneralCustomersImport
    }
    '/_authenticated/general/employees/$employeeId/edit': {
      preLoaderRoute: typeof AuthenticatedGeneralEmployeesEmployeeIdEditImport
      parentRoute: typeof AuthenticatedGeneralEmployeesImport
    }
    '/_authenticated/general/suppliers/$supplierId/edit': {
      preLoaderRoute: typeof AuthenticatedGeneralSuppliersSupplierIdEditImport
      parentRoute: typeof AuthenticatedGeneralSuppliersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedDocumentAllRoute,
    AuthenticatedDocumentMineRoute,
    AuthenticatedDocumentWaitingRoute,
    AuthenticatedHomeRoute,
    AuthenticatedDocumentNewRoute,
    AuthenticatedGeneralCustomersRoute.addChildren([
      AuthenticatedGeneralCustomersNewRoute,
      AuthenticatedGeneralCustomersCustomerIdEditRoute,
    ]),
    AuthenticatedGeneralEmployeesRoute.addChildren([
      AuthenticatedGeneralEmployeesNewRoute,
      AuthenticatedGeneralEmployeesEmployeeIdEditRoute,
    ]),
    AuthenticatedGeneralSuppliersRoute.addChildren([
      AuthenticatedGeneralSuppliersNewRoute,
      AuthenticatedGeneralSuppliersSupplierIdEditRoute,
    ]),
    AuthenticatedGeneralIndexRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
