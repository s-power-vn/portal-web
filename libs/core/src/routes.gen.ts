/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './../../../apps/spower/src/routes/__root'
import { Route as LoginImport } from './../../../apps/spower/src/routes/login'
import { Route as AuthenticatedImport } from './../../../apps/spower/src/routes/_authenticated'
import { Route as IndexImport } from './../../../apps/spower/src/routes/index'
import { Route as AuthenticatedProjectImport } from './../../../apps/spower/src/routes/_authenticated/project'
import { Route as AuthenticatedHomeImport } from './../../../apps/spower/src/routes/_authenticated/home'
import { Route as AuthenticatedGeneralImport } from './../../../apps/spower/src/routes/_authenticated/general'
import { Route as AuthenticatedProjectIndexImport } from './../../../apps/spower/src/routes/_authenticated/project/index'
import { Route as AuthenticatedGeneralIndexImport } from './../../../apps/spower/src/routes/_authenticated/general/index'
import { Route as AuthenticatedProjectProjectIdImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId'
import { Route as AuthenticatedGeneralSuppliersImport } from './../../../apps/spower/src/routes/_authenticated/general/suppliers'
import { Route as AuthenticatedGeneralEmployeesImport } from './../../../apps/spower/src/routes/_authenticated/general/employees'
import { Route as AuthenticatedGeneralCustomersImport } from './../../../apps/spower/src/routes/_authenticated/general/customers'
import { Route as AuthenticatedProjectProjectIdIndexImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/index'
import { Route as AuthenticatedProjectProjectIdSettingsImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/settings'
import { Route as AuthenticatedProjectProjectIdOverviewImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/overview'
import { Route as AuthenticatedProjectProjectIdIssuesImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues'
import { Route as AuthenticatedGeneralSuppliersNewImport } from './../../../apps/spower/src/routes/_authenticated/general/suppliers/new'
import { Route as AuthenticatedGeneralEmployeesNewImport } from './../../../apps/spower/src/routes/_authenticated/general/employees/new'
import { Route as AuthenticatedGeneralCustomersNewImport } from './../../../apps/spower/src/routes/_authenticated/general/customers/new'
import { Route as AuthenticatedProjectProjectIdIssuesIndexImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues/index'
import { Route as AuthenticatedProjectProjectIdIssuesMeImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues/me'
import { Route as AuthenticatedProjectProjectIdIssuesAllImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues/all'
import { Route as AuthenticatedGeneralSuppliersSupplierIdEditImport } from './../../../apps/spower/src/routes/_authenticated/general/suppliers/$supplierId/edit'
import { Route as AuthenticatedGeneralEmployeesEmployeeIdEditImport } from './../../../apps/spower/src/routes/_authenticated/general/employees/$employeeId/edit'
import { Route as AuthenticatedGeneralCustomersCustomerIdEditImport } from './../../../apps/spower/src/routes/_authenticated/general/customers/$customerId/edit'
import { Route as AuthenticatedProjectProjectIdIssuesMeIndexImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues/me/index'
import { Route as AuthenticatedProjectProjectIdIssuesAllIndexImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues/all/index'
import { Route as AuthenticatedProjectProjectIdIssuesMeIssueIdImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues/me/$issueId'
import { Route as AuthenticatedProjectProjectIdIssuesAllIssueIdImport } from './../../../apps/spower/src/routes/_authenticated/project/$projectId/issues/all/$issueId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProjectRoute = AuthenticatedProjectImport.update({
  path: '/project',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHomeRoute = AuthenticatedHomeImport.update({
  path: '/home',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGeneralRoute = AuthenticatedGeneralImport.update({
  path: '/general',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProjectIndexRoute = AuthenticatedProjectIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedProjectRoute,
} as any)

const AuthenticatedGeneralIndexRoute = AuthenticatedGeneralIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedGeneralRoute,
} as any)

const AuthenticatedProjectProjectIdRoute =
  AuthenticatedProjectProjectIdImport.update({
    path: '/$projectId',
    getParentRoute: () => AuthenticatedProjectRoute,
  } as any)

const AuthenticatedGeneralSuppliersRoute =
  AuthenticatedGeneralSuppliersImport.update({
    path: '/suppliers',
    getParentRoute: () => AuthenticatedGeneralRoute,
  } as any)

const AuthenticatedGeneralEmployeesRoute =
  AuthenticatedGeneralEmployeesImport.update({
    path: '/employees',
    getParentRoute: () => AuthenticatedGeneralRoute,
  } as any)

const AuthenticatedGeneralCustomersRoute =
  AuthenticatedGeneralCustomersImport.update({
    path: '/customers',
    getParentRoute: () => AuthenticatedGeneralRoute,
  } as any)

const AuthenticatedProjectProjectIdIndexRoute =
  AuthenticatedProjectProjectIdIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedProjectProjectIdRoute,
  } as any)

const AuthenticatedProjectProjectIdSettingsRoute =
  AuthenticatedProjectProjectIdSettingsImport.update({
    path: '/settings',
    getParentRoute: () => AuthenticatedProjectProjectIdRoute,
  } as any)

const AuthenticatedProjectProjectIdOverviewRoute =
  AuthenticatedProjectProjectIdOverviewImport.update({
    path: '/overview',
    getParentRoute: () => AuthenticatedProjectProjectIdRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesRoute =
  AuthenticatedProjectProjectIdIssuesImport.update({
    path: '/issues',
    getParentRoute: () => AuthenticatedProjectProjectIdRoute,
  } as any)

const AuthenticatedGeneralSuppliersNewRoute =
  AuthenticatedGeneralSuppliersNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedGeneralSuppliersRoute,
  } as any)

const AuthenticatedGeneralEmployeesNewRoute =
  AuthenticatedGeneralEmployeesNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedGeneralEmployeesRoute,
  } as any)

const AuthenticatedGeneralCustomersNewRoute =
  AuthenticatedGeneralCustomersNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedGeneralCustomersRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesIndexRoute =
  AuthenticatedProjectProjectIdIssuesIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedProjectProjectIdIssuesRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesMeRoute =
  AuthenticatedProjectProjectIdIssuesMeImport.update({
    path: '/me',
    getParentRoute: () => AuthenticatedProjectProjectIdIssuesRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesAllRoute =
  AuthenticatedProjectProjectIdIssuesAllImport.update({
    path: '/all',
    getParentRoute: () => AuthenticatedProjectProjectIdIssuesRoute,
  } as any)

const AuthenticatedGeneralSuppliersSupplierIdEditRoute =
  AuthenticatedGeneralSuppliersSupplierIdEditImport.update({
    path: '/$supplierId/edit',
    getParentRoute: () => AuthenticatedGeneralSuppliersRoute,
  } as any)

const AuthenticatedGeneralEmployeesEmployeeIdEditRoute =
  AuthenticatedGeneralEmployeesEmployeeIdEditImport.update({
    path: '/$employeeId/edit',
    getParentRoute: () => AuthenticatedGeneralEmployeesRoute,
  } as any)

const AuthenticatedGeneralCustomersCustomerIdEditRoute =
  AuthenticatedGeneralCustomersCustomerIdEditImport.update({
    path: '/$customerId/edit',
    getParentRoute: () => AuthenticatedGeneralCustomersRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesMeIndexRoute =
  AuthenticatedProjectProjectIdIssuesMeIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedProjectProjectIdIssuesMeRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesAllIndexRoute =
  AuthenticatedProjectProjectIdIssuesAllIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedProjectProjectIdIssuesAllRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesMeIssueIdRoute =
  AuthenticatedProjectProjectIdIssuesMeIssueIdImport.update({
    path: '/$issueId',
    getParentRoute: () => AuthenticatedProjectProjectIdIssuesMeRoute,
  } as any)

const AuthenticatedProjectProjectIdIssuesAllIssueIdRoute =
  AuthenticatedProjectProjectIdIssuesAllIssueIdImport.update({
    path: '/$issueId',
    getParentRoute: () => AuthenticatedProjectProjectIdIssuesAllRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/general': {
      preLoaderRoute: typeof AuthenticatedGeneralImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/home': {
      preLoaderRoute: typeof AuthenticatedHomeImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/project': {
      preLoaderRoute: typeof AuthenticatedProjectImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/general/customers': {
      preLoaderRoute: typeof AuthenticatedGeneralCustomersImport
      parentRoute: typeof AuthenticatedGeneralImport
    }
    '/_authenticated/general/employees': {
      preLoaderRoute: typeof AuthenticatedGeneralEmployeesImport
      parentRoute: typeof AuthenticatedGeneralImport
    }
    '/_authenticated/general/suppliers': {
      preLoaderRoute: typeof AuthenticatedGeneralSuppliersImport
      parentRoute: typeof AuthenticatedGeneralImport
    }
    '/_authenticated/project/$projectId': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdImport
      parentRoute: typeof AuthenticatedProjectImport
    }
    '/_authenticated/general/': {
      preLoaderRoute: typeof AuthenticatedGeneralIndexImport
      parentRoute: typeof AuthenticatedGeneralImport
    }
    '/_authenticated/project/': {
      preLoaderRoute: typeof AuthenticatedProjectIndexImport
      parentRoute: typeof AuthenticatedProjectImport
    }
    '/_authenticated/general/customers/new': {
      preLoaderRoute: typeof AuthenticatedGeneralCustomersNewImport
      parentRoute: typeof AuthenticatedGeneralCustomersImport
    }
    '/_authenticated/general/employees/new': {
      preLoaderRoute: typeof AuthenticatedGeneralEmployeesNewImport
      parentRoute: typeof AuthenticatedGeneralEmployeesImport
    }
    '/_authenticated/general/suppliers/new': {
      preLoaderRoute: typeof AuthenticatedGeneralSuppliersNewImport
      parentRoute: typeof AuthenticatedGeneralSuppliersImport
    }
    '/_authenticated/project/$projectId/issues': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesImport
      parentRoute: typeof AuthenticatedProjectProjectIdImport
    }
    '/_authenticated/project/$projectId/overview': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdOverviewImport
      parentRoute: typeof AuthenticatedProjectProjectIdImport
    }
    '/_authenticated/project/$projectId/settings': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdSettingsImport
      parentRoute: typeof AuthenticatedProjectProjectIdImport
    }
    '/_authenticated/project/$projectId/': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIndexImport
      parentRoute: typeof AuthenticatedProjectProjectIdImport
    }
    '/_authenticated/general/customers/$customerId/edit': {
      preLoaderRoute: typeof AuthenticatedGeneralCustomersCustomerIdEditImport
      parentRoute: typeof AuthenticatedGeneralCustomersImport
    }
    '/_authenticated/general/employees/$employeeId/edit': {
      preLoaderRoute: typeof AuthenticatedGeneralEmployeesEmployeeIdEditImport
      parentRoute: typeof AuthenticatedGeneralEmployeesImport
    }
    '/_authenticated/general/suppliers/$supplierId/edit': {
      preLoaderRoute: typeof AuthenticatedGeneralSuppliersSupplierIdEditImport
      parentRoute: typeof AuthenticatedGeneralSuppliersImport
    }
    '/_authenticated/project/$projectId/issues/all': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesAllImport
      parentRoute: typeof AuthenticatedProjectProjectIdIssuesImport
    }
    '/_authenticated/project/$projectId/issues/me': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesMeImport
      parentRoute: typeof AuthenticatedProjectProjectIdIssuesImport
    }
    '/_authenticated/project/$projectId/issues/': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesIndexImport
      parentRoute: typeof AuthenticatedProjectProjectIdIssuesImport
    }
    '/_authenticated/project/$projectId/issues/all/$issueId': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesAllIssueIdImport
      parentRoute: typeof AuthenticatedProjectProjectIdIssuesAllImport
    }
    '/_authenticated/project/$projectId/issues/me/$issueId': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesMeIssueIdImport
      parentRoute: typeof AuthenticatedProjectProjectIdIssuesMeImport
    }
    '/_authenticated/project/$projectId/issues/all/': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesAllIndexImport
      parentRoute: typeof AuthenticatedProjectProjectIdIssuesAllImport
    }
    '/_authenticated/project/$projectId/issues/me/': {
      preLoaderRoute: typeof AuthenticatedProjectProjectIdIssuesMeIndexImport
      parentRoute: typeof AuthenticatedProjectProjectIdIssuesMeImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedGeneralRoute.addChildren([
      AuthenticatedGeneralCustomersRoute.addChildren([
        AuthenticatedGeneralCustomersNewRoute,
        AuthenticatedGeneralCustomersCustomerIdEditRoute,
      ]),
      AuthenticatedGeneralEmployeesRoute.addChildren([
        AuthenticatedGeneralEmployeesNewRoute,
        AuthenticatedGeneralEmployeesEmployeeIdEditRoute,
      ]),
      AuthenticatedGeneralSuppliersRoute.addChildren([
        AuthenticatedGeneralSuppliersNewRoute,
        AuthenticatedGeneralSuppliersSupplierIdEditRoute,
      ]),
      AuthenticatedGeneralIndexRoute,
    ]),
    AuthenticatedHomeRoute,
    AuthenticatedProjectRoute.addChildren([
      AuthenticatedProjectProjectIdRoute.addChildren([
        AuthenticatedProjectProjectIdIssuesRoute.addChildren([
          AuthenticatedProjectProjectIdIssuesAllRoute.addChildren([
            AuthenticatedProjectProjectIdIssuesAllIssueIdRoute,
            AuthenticatedProjectProjectIdIssuesAllIndexRoute,
          ]),
          AuthenticatedProjectProjectIdIssuesMeRoute.addChildren([
            AuthenticatedProjectProjectIdIssuesMeIssueIdRoute,
            AuthenticatedProjectProjectIdIssuesMeIndexRoute,
          ]),
          AuthenticatedProjectProjectIdIssuesIndexRoute,
        ]),
        AuthenticatedProjectProjectIdOverviewRoute,
        AuthenticatedProjectProjectIdSettingsRoute,
        AuthenticatedProjectProjectIdIndexRoute,
      ]),
      AuthenticatedProjectIndexRoute,
    ]),
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
