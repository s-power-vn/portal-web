/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedHomeRouteImport } from './routes/_authenticated/home/route'
import { Route as AuthenticatedTicketsIndexImport } from './routes/_authenticated/tickets/index'
import { Route as AuthenticatedTicketsType2RouteImport } from './routes/_authenticated/tickets/type2/route'
import { Route as AuthenticatedTicketsType1RouteImport } from './routes/_authenticated/tickets/type1/route'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedHomeRouteRoute = AuthenticatedHomeRouteImport.update({
  path: '/home',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/home/route.lazy').then((d) => d.Route),
)

const AuthenticatedTicketsIndexRoute = AuthenticatedTicketsIndexImport.update({
  path: '/tickets/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTicketsType2RouteRoute =
  AuthenticatedTicketsType2RouteImport.update({
    path: '/tickets/type2',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedTicketsType1RouteRoute =
  AuthenticatedTicketsType1RouteImport.update({
    path: '/tickets/type1',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/home': {
      preLoaderRoute: typeof AuthenticatedHomeRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tickets/type1': {
      preLoaderRoute: typeof AuthenticatedTicketsType1RouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tickets/type2': {
      preLoaderRoute: typeof AuthenticatedTicketsType2RouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tickets/': {
      preLoaderRoute: typeof AuthenticatedTicketsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedHomeRouteRoute,
    AuthenticatedTicketsType1RouteRoute,
    AuthenticatedTicketsType2RouteRoute,
    AuthenticatedTicketsIndexRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
